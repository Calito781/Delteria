package delteria.card;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

public class CardRenderer {

	private static final int WIDTH = 450;
	private static final int HEIGHT = 80;

	private final DurationFormatter duration_formatter;
	private CharacterRenderer character_renderer = new CharacterRenderer();
	public CardRenderer() {
		duration_formatter = new DurationFormatter();
	}

	public RenderedImage render(Card card) throws IOException {
		BufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_3BYTE_BGR);

		Graphics graphics = image.getGraphics();

		// draw background
		Image background = ImageIO.read(getClass().getResourceAsStream("card_background.png"));
		graphics.drawImage(background, 0, 0, null);
		
		// status
		Image status = ImageIO.read(getClass().getResourceAsStream(card.isOnline ? "status_online.png" : "status_offline.png"));
		graphics.drawImage(status, 70, 17, null);
		
		// logo
		Image logo = ImageIO.read(getClass().getResourceAsStream("logo.png"));
		graphics.drawImage(logo, WIDTH - 100 + 1, 30 + 1, null);

		// draw sprite
		Image character = character_renderer.render(card);
		graphics.drawImage(character, 8, 8, null);
		
		// draw name
		graphics.setFont(new Font("Arial", Font.BOLD, 17));
		graphics.setColor(Color.BLACK);
		graphics.drawString(card.nickname, 90 + 1, 30 + 1);
		graphics.setColor(Color.WHITE);
		graphics.drawString(card.nickname, 90, 30);

		// draw online time
		graphics.setFont(new Font("Arial", Font.PLAIN, 12));
		graphics.setColor(Color.BLACK);
		graphics.drawString(duration_formatter.format(card.onlineDuration), 70 + 1, 44 + 1);
		graphics.setColor(Color.WHITE);
		graphics.drawString(duration_formatter.format(card.onlineDuration), 70, 44);

		return image;
	}
}
